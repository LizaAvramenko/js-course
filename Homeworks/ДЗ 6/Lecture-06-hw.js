// 1.
// удалить свойство age,
// изменить свойство gender,
// добавить свойство массив объектов pets [{name: '',age: 0, classOfAnimal: 'dog'}]
// const userBob = {
// 	name: 'Bob',
// 	age: 21,
// 	gender: 'male',
// 	married: false,
// }
// 2. Напишите функцию, которая проверяет, является ли элемент именно простым объектом, а не массивом, null и т.п.
// isPlainObject(el: any) => boolean
// 3. Напишите функцию, которая возвращает новый объект без указанных значений. первый параметр obj второй массив свойств которые мы удалим
// getObjWithout({ a: 1, b: 2 }, ['b']) => { a: 1 }
// 4. Напишите функцию, которая поверхностно сравнивает два объекта.
// * Ожидаемый результат: true если объекты идентичны, false если объекты разные ({ a: 1, b: 1 }, { a: 1, b: 1 }) => true
// 5. создать функцию которая принимает массив данных [1,24,'Bob', true, null, { name: 'Sam', age: 10 }, ...и тд]и возвращает объект {index0: 1, index1: 24, index2: 'Bob', ..... и тд}
// 6. sortByProp. Напишите функцию, которая отсортирует массив объектов по имени свойства
//
// const users = [
// 	{ name: 'Bob', age: 20 },
// 	{ name: 'Sam', age: 10 },
// 	{ name: 'Anna', age: 29 },
// 	{ name: 'Jim', age: 15 },
// 	{ name: 'Alex', age: 45 },
// 	{ name: 'Mick', age: 23 },
// ];
// sortByProp(массив объектов, свойство)
// sortByProp(arrayOfObjects, property)
// sortByProp(users, age)
// вернет массив отсортированных объектов
// доп: проверить есть ли свойство в объекте если нет то возвращаем массив без изменений


// 7. преобразуйте массив users в JSON (поиграйтесь с 3им параметром space) передайте значение в переменную и выведите на экран

// 8. клонировать объект
const userBob = {
	name: 'Bob',
	age: 21,
	gender: 'male',
	married: false,
	pets: [{name: 'Rex', age:10}, {name: 'Ron', age: 3}],
	breaks: ['11:00', '17:00'],
	favoriteMovie: {
		name: 'Avatar',
		year: 2009,
		info: {
			country: 'USA',
			director: 'James Cameron'
		}
	}
}
// циклом удалить все свойства объекта черех obk[]
// Теория лерн джс все что касается объектов, методы объектов, глубокое копирование, json, spread, опциональная цепочка
